- name: Update packages
  apt:
    upgrade: dist

- name: Install dependencies
  action: apt pkg={{item}} state=installed
  with_items:
       - git
       - curl
       - facter
       - iptables
       - iptables-persistent
       - nginx
       - fail2ban

- name: enable ipv4 forwarding for docker's communication
  shell: sysctl net.ipv4.conf.all.forwarding=1

- name: download a decent version of nodejs
  shell: curl -sSL https://deb.nodesource.com/setup_6.x | bash -

- name: install a decent version of nodejs and npm
  action: apt pkg=nodejs state=installed

- name: add yarn debian key
  shell: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -

- name: add yarn to apt-source
  shell: echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

- name: install yarn
  action: apt update_cache=yes pkg=yarn state=installed

- name: generate iptables rules ipv4
  template: src=iptables.j2 dest=/etc/iptables/rules.v4
  notify:
      - restart iptables-persistent

- name: generate iptables rules ipv6
  template: src=ip6tables.j2 dest=/etc/iptables/rules.v6
  notify:
      - restart iptables-persistent

- name: deactivate the default nginx site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: configure nginx
  template: src=nginx.j2 dest=/etc/nginx/sites-enabled/poc
  notify:
      - restart nginx

- name: install docker
  shell: curl -sSL https://get.docker.com/ | sh

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

- name: chmod docker-compose
  shell: chmod +x /usr/local/bin/docker-compose

- git:
    repo: https://github.com/CaliOpen/Caliopen.git 
    dest: "{{ install_dir }}"

- name: build docker services
  shell: docker-compose build  
  args:
    chdir: "{{ devtools_dir }}"

- name: docker up redis cassandra elasticsearch
  shell: docker-compose up -d redis cassandra elasticsearch 
  args:
    chdir: "{{ devtools_dir }}"

- name: wait for cassandra's database up
  wait_for:
    host: 0.0.0.0
    port: 9042
    delay: 30

- name: setup storage
  shell: docker-compose run cli setup
  args:
    chdir: "{{ devtools_dir }}"

- name: install caliopen docker stack as a systemd service
  template: src=caliopen-stack.service.j2 dest=/etc/systemd/system/caliopen-stack.service

- name: enable caliopen docker stack service
  shell: systemctl enable caliopen-stack.service

- name: start full caliopen docker stack
  shell: systemctl start caliopen-stack.service
